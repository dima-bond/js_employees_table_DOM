{"version":3,"sources":["scripts/main.js"],"names":["prevColNumber","container","document","querySelector","sameColClickedCounter","sortColumn","column","reverseSort","coefficient","content","querySelectorAll","children","innerText","sort","a","b","A","B","toNumber","localeCompare","append","str","Number","replace","split","join","thead","addEventListener","e","currentColNumber","indexOf","target","item","closest","selectedRow","classList","toggle","remove","dataCell","dataCellText","textContent","insertAdjacentHTML","input","value","focus","eBlur","eDown","key","body","form","button","disableButtonAfterClick","disabled","setTimeout","preventDefault","data","FormData","get","length","pushNotification","toLocaleString","title","description","type","element","style","top","getBoundingClientRect","offsetHeight","window","pageYOffset","left"],"mappings":"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","file":"main.85764e37.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst container = document.querySelector('tbody');\nlet prevColNumber;\nlet sameColClickedCounter = 0;\n\nfunction sortColumn(column, reverseSort) {\n  const coefficient = reverseSort ? -1 : 1;\n  const content = [...document.querySelectorAll('tbody > tr')];\n  const firstSymbol = content[0].children[column].innerText[0];\n\n  if (firstSymbol === '$') {\n    content.sort((a, b) => {\n      const A = a.children[column].innerText;\n      const B = b.children[column].innerText;\n\n      return coefficient * toNumber(A) - coefficient * toNumber(B);\n    });\n  } else {\n    content.sort((a, b) => {\n      const A = a.children[column].innerText;\n      const B = b.children[column].innerText;\n\n      return coefficient * A.localeCompare(B);\n    });\n  }\n\n  container.append(...content);\n}\n\nfunction toNumber(str) {\n  return Number(str.replace('$', '').split(',').join(''));\n}\n\nconst thead = document.querySelector('thead');\n\nthead.addEventListener('click', e => {\n  const currentColNumber = [...document.querySelectorAll('thead > tr > th')]\n    .indexOf(e.target);\n\n  let reverseSort = false;\n\n  if (prevColNumber === currentColNumber) {\n    sameColClickedCounter++;\n\n    if (sameColClickedCounter % 2 === 0) {\n      reverseSort = true;\n    }\n  } else {\n    sameColClickedCounter = 1;\n  }\n\n  prevColNumber = currentColNumber;\n  sortColumn(currentColNumber, reverseSort);\n});\n\ncontainer.addEventListener('click', e => {\n  const item = e.target.closest('tr');\n  const selectedRow = document.querySelector('.active');\n\n  item.classList.toggle('active');\n\n  if (selectedRow) {\n    selectedRow.classList.remove('active');\n  }\n});\n\ncontainer.addEventListener('dblclick', e => {\n  const dataCell = e.target.closest('td');\n  const dataCellText = dataCell.textContent;\n\n  dataCell.textContent = '';\n\n  dataCell.insertAdjacentHTML('afterbegin', `\n  <input class=\"cell-input\">\n  `);\n\n  const input = document.querySelector('.cell-input');\n\n  input.value = dataCellText;\n  input.focus();\n\n  input.addEventListener('blur', (eBlur) => {\n    if (eBlur.target.value !== '') {\n      dataCell.textContent = eBlur.target.value;\n    } else {\n      dataCell.textContent = dataCellText;\n    }\n    input.remove();\n  });\n\n  input.addEventListener('keydown', (eDown) => {\n    if (eDown.key !== 'Enter') {\n      return;\n    }\n\n    if (eDown.target.value !== '') {\n      dataCell.textContent = eDown.target.value;\n    } else {\n      dataCell.textContent = dataCellText;\n    }\n    input.remove();\n  });\n});\n\ndocument.body.insertAdjacentHTML('beforeend', `\n  <form action=\"/\" method=\"GET\" class=\"new-employee-form\">\n    <label>Name:\n      <input name=\"name\" type=\"text\" data-qa=\"name\" required>\n    </label>\n    <label>Position:\n      <input name=\"position\" type=\"text\" data-qa=\"position\">\n    </label>\n    <label>Office:\n      <select name=\"office\" data-qa=\"office\">\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n    <label>Age:\n      <input name=\"age\" type=\"number\" data-qa=\"age\" required>\n    </label>\n    <label>Salary:\n      <input name=\"salary\" type=\"number\" data-qa=\"salary\" required>\n    </label>\n    <button type=\"submit\">Save to table</button>\n  </form>\n`);\n\nconst form = document.querySelector('.new-employee-form');\nconst button = form.querySelector('button');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  disableButtonAfterClick();\n\n  const data = new FormData(form);\n\n  if (data.get('name').length < 4\n    || +data.get('age') < 18\n    || +data.get('age') > 90\n    || data.get('position') === '') {\n    return pushNotification(\n      'Error saving data',\n      'All fields must be filled. \\n'\n      + 'Name should consist of more than 4 characters. \\n'\n      + 'Age can not be less than 18 or greater than 90.',\n      'error');\n  }\n\n  container.insertAdjacentHTML('beforeend', `\n    <tr>\n      <td>${data.get('name')}</td>\n      <td>${data.get('position')}</td>\n      <td>${data.get('office')}</td>\n      <td>${data.get('age')}</td>\n      <td>$${(+data.get('salary')).toLocaleString('en')}</td>\n    </tr>\n  `);\n\n  return pushNotification(\n    'Congratulations',\n    'A new employee has been added!',\n    'success');\n});\n\nfunction disableButtonAfterClick() {\n  button.disabled = true;\n\n  setTimeout(() => {\n    button.disabled = false;\n  }, 2000);\n}\n\nconst pushNotification = (title, description, type) => {\n  const list = document.body;\n\n  list.insertAdjacentHTML('beforeend', `\n    <div class=\"notification ${type}\" data-qa=\"notification\">\n      <h2 class=\"title\">${title}</h2>\n      <p>${description}</p>\n    </div>\n  `);\n\n  const element = document.querySelector(`.${type}`);\n\n  element.style.top = `${form.getBoundingClientRect().top\n    + form.offsetHeight + 10 + window.pageYOffset}px`;\n  element.style.left = `${form.getBoundingClientRect().left}px`;\n\n  setTimeout(() => {\n    element.remove();\n  }, 2000);\n};\n"]}